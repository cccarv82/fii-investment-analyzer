import React, { createContext, useContext, useState, useEffect } from "react";
import { useAuth } from "./AuthContext";
import { supabase } from "../lib/supabase";
import Anthropic from '@anthropic-ai/sdk';
import { testBRAPIData } from '../lib/api/test_brapi_data';
import { debugDY } from '../lib/api/debug_dy_browser';
import { testBRAPIRangeOptions } from '../lib/api/test_brapi_range';
import { testHybridMethod } from '../lib/api/test_hybrid_method';

// üéØ Contexto da IA com integra√ß√£o exclusiva ao Claude
const AIContext = createContext();

// ü§ñ Classe para gerenciar IA do Claude (Anthropic)
class ClaudeManager {
  constructor() {
    this.apiKey = null;
    this.model = "claude-opus-4-20250514"; // ‚úÖ Modelo correto especificado
    this.anthropic = null;
  }

  setApiKey(key) {
    this.apiKey = key;
    if (key) {
      this.anthropic = new Anthropic({
        apiKey: key,
        dangerouslyAllowBrowser: true // ‚úÖ Necess√°rio para uso no browser
      });
    } else {
      this.anthropic = null;
    }
  }

  getApiKey() {
    return this.apiKey;
  }

  // üöÄ Fazer requisi√ß√£o para Claude com SDK oficial
  async makeRequest(messages, temperature = 0.1, systemPrompt = "") {
    if (!this.apiKey) {
      throw new Error("API key do Claude n√£o configurada");
    }

    try {
      const requestParams = {
        model: "claude-opus-4-20250514",
        max_tokens: 8000, // Aumentado de 4000 para 8000
        temperature,
        messages,
      };

      // Adicionar system prompt se fornecido
      if (systemPrompt) {
        requestParams.system = systemPrompt;
      }

      const response = await this.anthropic.messages.create(requestParams);

      return response.content[0].text;
    } catch (error) {
      console.error("Erro na requisi√ß√£o para Claude:", error);
      if (error.status === 401) {
        throw new Error("API key do Claude inv√°lida ou expirada");
      }
      if (error.status === 429) {
        throw new Error("Limite de requisi√ß√µes atingido. Tente novamente em alguns minutos");
      }
      throw new Error(`Erro na API do Claude: ${error.message}`);
    }
  }

  // üéØ An√°lise fundamentalista de FII individual
  async analyzeFII(fiiData, userProfile) {
    const systemPrompt = `üèÜ VOC√ä √â BENJAMIN GRAHAM + WARREN BUFFETT ESPECIALIZADO EM FIIs BRASILEIROS! üèÜ

üéØ MISS√ÉO: Realizar a AN√ÅLISE FUNDAMENTALISTA MAIS RIGOROSA E COMPLETA de um FII individual!

## üìä METODOLOGIA SUPREMA DE AN√ÅLISE INDIVIDUAL:

### üî¨ AN√ÅLISE QUANTITATIVA RIGOROSA:
1. **VALUATION PROFUNDO**:
   - P/VP vs valor intr√≠nseco estimado
   - DY atual vs hist√≥rico 24m vs setor
   - ROE impl√≠cito (DY √∑ P/VP) vs benchmark
   - M√∫ltiplos: P/FFO, EV/EBITDA, Cap Rate

2. **QUALIDADE FINANCEIRA**:
   - Consist√™ncia de dividendos (24+ meses)
   - Crescimento DY (CAGR 24m)
   - Vacancy rate vs setor
   - Inadimpl√™ncia vs benchmark
   - Liquidez di√°ria vs m√≠nimo

3. **EFICI√äNCIA OPERACIONAL**:
   - Margem EBITDA vs setor
   - Custo de administra√ß√£o vs AUM
   - Giro do ativo vs benchmark
   - Produtividade por m¬≤ vs mercado

### üéØ AN√ÅLISE QUALITATIVA PROFUNDA:
1. **GEST√ÉO & GOVERNAN√áA**:
   - Track record da gestora (anos, AUM)
   - Transpar√™ncia (relat√≥rios, calls)
   - Alinhamento de interesses
   - Hist√≥rico de aquisi√ß√µes/vendas

2. **QUALIDADE DOS ATIVOS**:
   - Localiza√ß√£o (AAA, AA, A, B)
   - Idade e estado de conserva√ß√£o
   - Certifica√ß√µes (LEED, AQUA, etc.)
   - Potencial de valoriza√ß√£o

3. **CONTRATOS & INQUILINOS**:
   - Prazo m√©dio ponderado
   - Tipo de reajuste (IPCA+, IGP-M, fixo)
   - Diversifica√ß√£o de inquilinos
   - Rating dos locat√°rios
   - Hist√≥rico de renova√ß√µes

### üåç AN√ÅLISE SETORIAL & MACRO:
1. **POSICIONAMENTO COMPETITIVO**:
   - Market share no segmento
   - Vantagens competitivas (moat)
   - Barreiras de entrada
   - Amea√ßas de substitui√ß√£o

2. **TEND√äNCIAS SECULARES**:
   - Crescimento do setor (10+ anos)
   - Impacto tecnol√≥gico
   - Mudan√ßas demogr√°ficas
   - Regulamenta√ß√£o

### üìà COMPARA√á√ÉO SELIC MATEMATICAMENTE CORRETA:
- **DY < Selic**: "DY de X% abaixo da Selic de 14.75%"
- **DY ‚âà Selic**: "DY de X% pr√≥ximo √† Selic de 14.75%"
- **DY > Selic**: "DY de X% superior √† Selic de 14.75%"
- **JAMAIS**: Erro matem√°tico de dizer que menor "supera" maior!

### üéØ PRE√áO-ALVO FUNDAMENTALISTA:
- **METODOLOGIA**: DCF + M√∫ltiplos compar√°veis + An√°lise t√©cnica
- **CEN√ÅRIOS**: Base (70%), Otimista (20%), Pessimista (10%)
- **M√ÅXIMO**: 12% valoriza√ß√£o em 12 meses
- **VALIDA√á√ÉO**: targetPrice ‚â§ pre√ßo_atual √ó 1.12

RETORNE AN√ÅLISE COMPLETA E PRECISA!`;

    const messages = [
      {
        role: "user",
        content: `üîç AN√ÅLISE FUNDAMENTALISTA SUPREMA:

üìä FII: ${fiiData.ticker} - ${fiiData.name || fiiData.ticker}
üí∞ Pre√ßo: R$ ${fiiData.price}
üìà DY: ${fiiData.dividendYield}%
üìä P/VP: ${fiiData.pvp}
üè¢ Setor: ${fiiData.sector}
üíº Qualidade: ${fiiData.qualityScore || "N/A"}/10

üë§ PERFIL INVESTIDOR:
- Risco: ${userProfile.riskProfile}
- Objetivo: ${userProfile.investmentGoal}
- Prazo: ${userProfile.timeHorizon}

üåç CONTEXTO: Selic 14.75%, IPCA 4.5%, PIB +2.1%

üéØ RETORNE JSON COMPLETO:

{
  "score": nota_0_a_10,
  "recommendation": "COMPRAR_FORTE|COMPRAR|MANTER|VENDER|EVITAR",
  "reasoning": "AN√ÅLISE FUNDAMENTALISTA COMPLETA 300+ palavras: Avalie valuation (P/VP vs intr√≠nseco), sustentabilidade DY vs hist√≥rico, qualidade gest√£o, ativos premium, contratos blindados, inquilinos AAA, localiza√ß√£o, moat defensivo, tese secular, compara√ß√£o matem√°tica correta com Selic 14.75%, stress scenarios, catalysadores valoriza√ß√£o. Use metodologia Graham+Buffett.",
  "strengths": ["ponto_forte_1", "ponto_forte_2", "ponto_forte_3", "ponto_forte_4"],
  "weaknesses": ["fraqueza_1", "fraqueza_2", "fraqueza_3"],
  "targetPrice": preco_alvo_maximo_12_porcento,
  "riskLevel": "BAIXO|M√âDIO|ALTO",
  "suitability": adequacao_perfil_0_a_10,
  "valuation": {
    "intrinsicValue": valor_intrinseco_estimado,
    "upside": potencial_alta_percentual,
    "margin": margem_seguranca_percentual
  },
  "fundamentals": {
    "dyConsistency": "consistencia_dividendos_24m",
    "dyGrowth": "crescimento_dy_cagr",
    "vacancyRate": taxa_vacancy_percentual,
    "contractDuration": prazo_medio_contratos_anos
  },
  "moat": "vantagem_competitiva_sustentavel",
  "catalysts": ["catalisador_1", "catalisador_2"],
  "risks": ["risco_especifico_1", "risco_especifico_2"],
  "timeHorizon": "prazo_recomendado_investimento"
}`,
      },
    ];

    const response = await this.makeRequest(messages, 0.1, systemPrompt);
    let cleanResponse = response.trim();

    if (cleanResponse.startsWith("```json")) {
      cleanResponse = cleanResponse
        .replace(/```json\s*/, "")
        .replace(/```\s*$/, "");
    }
    if (cleanResponse.startsWith("```")) {
      cleanResponse = cleanResponse
        .replace(/```\s*/, "")
        .replace(/```\s*$/, "");
    }

    return JSON.parse(cleanResponse);
  }

  // üéØ An√°lise de portf√≥lio completa
  async analyzePortfolio(portfolio, userProfile) {
    const systemPrompt = `üèÜ VOC√ä √â RAY DALIO + HARRY MARKOWITZ ESPECIALIZADO EM CARTEIRAS FIIs BRASILEIROS! üèÜ

üéØ MISS√ÉO: Realizar a AN√ÅLISE DE PORTF√ìLIO MAIS AVAN√áADA E COMPLETA do mundo!

## üìä METODOLOGIA "ALL WEATHER FIIs" - AN√ÅLISE SUPREMA DE CARTEIRA:

### üî¨ AN√ÅLISE QUANTITATIVA AVAN√áADA:
1. **DIVERSIFICA√á√ÉO INTELIGENTE**:
   - Concentra√ß√£o setorial (m√°x 30% por setor)
   - Concentra√ß√£o geogr√°fica (SP ‚â§ 50%, RJ ‚â§ 20%)
   - Concentra√ß√£o por gestora (m√°x 20% por gestora)
   - Correla√ß√£o entre ativos (<0.6 ideal)
   - √çndice Herfindahl-Hirschman

2. **AN√ÅLISE DE RISCO**:
   - Beta vs IFIX (volatilidade relativa)
   - VaR 95% (Value at Risk)
   - Sharpe Ratio (retorno/risco)
   - Maximum Drawdown hist√≥rico
   - Stress testing scenarios

3. **QUALIDADE FINANCEIRA**:
   - DY m√©dio ponderado vs Selic
   - P/VP m√©dio ponderado vs setor
   - Liquidez m√©dia di√°ria
   - Consist√™ncia de dividendos
   - Crescimento DY (CAGR 24m)

### üéØ AN√ÅLISE QUALITATIVA PROFUNDA:
1. **SUSTENTABILIDADE DE RENDA**:
   - Previsibilidade dos dividendos
   - Qualidade dos contratos
   - Diversifica√ß√£o de inquilinos
   - Reajustes contratuais
   - Hist√≥rico de distribui√ß√µes

2. **RESILI√äNCIA ECON√îMICA**:
   - Performance em diferentes ciclos
   - Resist√™ncia a recess√µes
   - Adaptabilidade a mudan√ßas
   - Qualidade da gest√£o
   - Governan√ßa corporativa

### üåê AN√ÅLISE DE CORRELA√á√ÉO:
1. **MATRIZ DE CORRELA√á√ÉO**:
   - Correla√ß√£o entre setores
   - Correla√ß√£o geogr√°fica
   - Correla√ß√£o com macro (Selic, IPCA)
   - Correla√ß√£o com ciclos econ√¥micos

2. **STRESS SCENARIOS**:
   - Selic 18%: Impacto no P/VP
   - Recess√£o: Sustentabilidade DY
   - Infla√ß√£o 8%: Reajustes
   - Vacancy +5%: Impacto renda

### üìà OTIMIZA√á√ÉO DE CARTEIRA:
1. **FRONTEIRA EFICIENTE**:
   - M√°ximo retorno para dado risco
   - M√≠nimo risco para dado retorno
   - Ponto √≥timo Sharpe
   - Rebalanceamento sugerido

2. **ALLOCATION INTELIGENTE**:
   - Peso √≥timo por ativo
   - Necessidade de rebalanceamento
   - Novos aportes sugeridos
   - Sa√≠das recomendadas

RETORNE AN√ÅLISE COMPLETA E ESTRAT√âGICA!`;

    const messages = [
      {
        role: "user",
        content: `üîç AN√ÅLISE SUPREMA DE CARTEIRA:

üíº CARTEIRA ATUAL:
${portfolio
          .map((p) => `${p.ticker}: ${p.shares} cotas, ${p.sector}, R$ ${p.average_price?.toFixed(2) || 'N/A'}/cota`)
          .join(" | ")}

üë§ PERFIL INVESTIDOR:
- Risco: ${userProfile.riskProfile}
- Objetivo: ${userProfile.investmentGoal}
- Prazo: ${userProfile.timeHorizon}

üåç CONTEXTO: Selic 14.75%, IPCA 4.5%, PIB +2.1%

üéØ RETORNE JSON COMPLETO:

{
  "overallScore": nota_geral_0_a_10,
  "diversificationScore": nota_diversificacao_0_a_10,
  "riskScore": nota_risco_0_a_10,
  "qualityScore": nota_qualidade_0_a_10,
  "recommendations": ["recomendacao_1", "recomendacao_2", "recomendacao_3"],
  "strengths": ["ponto_forte_1", "ponto_forte_2", "ponto_forte_3"],
  "weaknesses": ["fraqueza_1", "fraqueza_2", "fraqueza_3"],
  "riskAnalysis": {
    "concentrationRisk": "analise_concentracao",
    "sectorExposure": "exposicao_setorial",
    "geographicRisk": "risco_geografico",
    "liquidityRisk": "risco_liquidez"
  },
  "diversification": {
    "sectorAllocation": "distribuicao_setorial_atual",
    "optimalAllocation": "alocacao_otima_sugerida",
    "correlationLevel": "nivel_correlacao_baixo_medio_alto",
    "herfindahlIndex": indice_concentracao_0_a_1
  },
  "performance": {
    "expectedReturn": retorno_esperado_anual_percentual,
    "expectedYield": dy_medio_ponderado,
    "riskLevel": "BAIXO|M√âDIO|ALTO",
    "sharpeRatio": ratio_sharpe_estimado,
    "volatility": volatilidade_estimada_percentual
  },
  "rebalancing": {
    "needed": true_ou_false,
    "priority": "ALTA|M√âDIA|BAIXA",
    "suggestions": ["sugestao_rebalanceamento_1", "sugestao_2"],
    "newAllocations": "novas_alocacoes_sugeridas"
  },
  "stressTest": {
    "recessionScenario": "impacto_recessao",
    "interestRateRise": "impacto_alta_juros",
    "inflationSpike": "impacto_inflacao",
    "overallResilience": "ALTA|M√âDIA|BAIXA"
  },
  "monthlyIncome": {
    "current": renda_mensal_atual_estimada,
    "potential": renda_mensal_potencial_otimizada,
    "sustainability": "ALTA|M√âDIA|BAIXA",
    "growth": crescimento_anual_esperado_percentual
  }
}`,
      },
    ];

    const response = await this.makeRequest(messages, 0.2, systemPrompt);
    let cleanResponse = response.trim();

    if (cleanResponse.startsWith("```json")) {
      cleanResponse = cleanResponse
        .replace(/```json\s*/, "")
        .replace(/```\s*$/, "");
    }
    if (cleanResponse.startsWith("```")) {
      cleanResponse = cleanResponse
        .replace(/```\s*/, "")
        .replace(/```\s*$/, "");
    }

    return JSON.parse(cleanResponse);
  }

  // üéØ Gerar sugest√µes de investimento
  async generateInvestmentSuggestions(eligibleFIIs, userProfile, currentPortfolio = []) {
    const systemPrompt = `üèÜ VOC√ä √â WARREN BUFFETT + RAY DALIO + PETER LYNCH ESPECIALIZADO EM FIIs BRASILEIROS! üèÜ

üéØ MISS√ÉO SUPREMA: MAXIMIZAR DIVIDENDOS MENSAIS E RENDA PASSIVA SUSTENT√ÅVEL!

## üí∞ OBJETIVO PRINCIPAL: M√ÅXIMA RENDA MENSAL
- **FOCO ABSOLUTO**: Dividendos mensais consistentes e crescentes
- **META**: Maior DY sustent√°vel + crescimento anual dos dividendos
- **PRIORIDADE**: Consist√™ncia > Volatilidade, Sustentabilidade > Picos tempor√°rios

## üìä METODOLOGIA SUPREMA "DIVIDEND MAXIMIZER":

### üî¨ AN√ÅLISE DE DIVIDENDOS (PRIORIDADE #1):
1. **DY SUSTENT√ÅVEL**: DY atual vs hist√≥rico 24m, consist√™ncia distribui√ß√µes
2. **CRESCIMENTO DIVIDENDOS**: CAGR dividendos 24m, tend√™ncia crescimento
3. **PREVISIBILIDADE**: Regularidade pagamentos, aus√™ncia de cortes hist√≥ricos
4. **COBERTURA**: FFO/Dividendo ratio, sustentabilidade longo prazo

### üéØ QUALIDADE OPERACIONAL (SUPORTE AOS DIVIDENDOS):
1. **RECEITA RECORRENTE**: Contratos longos, inquilinos AAA, reajustes IPCA+
2. **OCUPA√á√ÉO ALTA**: Taxa ocupa√ß√£o >95%, baixa rotatividade inquilinos
3. **GEST√ÉO EFICIENTE**: Baixo custo administra√ß√£o, transpar√™ncia, track record

### üåç SUSTENTABILIDADE SECULAR:
1. **SETOR RESILIENTE**: Demanda crescente, baixa obsolesc√™ncia
2. **LOCALIZA√á√ÉO PREMIUM**: Regi√µes valorizadas, infraestrutura consolidada
3. **MOAT DEFENSIVO**: Barreiras entrada, vantagens competitivas duradouras

### üìà COMPARA√á√ÉO SELIC (MATEM√ÅTICA CORRETA):
- **DY < 14.75%**: "DY de X% abaixo da Selic de 14.75%"
- **DY ‚â• 14.75%**: "DY de X% superior √† Selic de 14.75%"
- **JAMAIS**: Erro de dizer que menor "supera" maior!

### üéØ PRE√áO-ALVO CONSERVADOR:
- **FOCO**: Dividendos > Valoriza√ß√£o (buy and hold para renda)
- **M√ÅXIMO**: 12% valoriza√ß√£o em 12 meses
- **VALIDA√á√ÉO**: targetPrice ‚â§ pre√ßo_atual √ó 1.12

CONTEXTO 2025: Selic 14.75%, IPCA 4.5%, PIB +2.1%

PRIORIZE FIIs COM: DY alto + crescimento hist√≥rico + consist√™ncia + sustentabilidade!`;

    const messages = [
      {
        role: "user",
        content: `üîç AN√ÅLISE SUPREMA PARA M√ÅXIMA RENDA MENSAL: ${eligibleFIIs.length} FIIs para R$ ${userProfile.investmentAmount}

üë§ PERFIL: ${userProfile.riskProfile} | ${userProfile.investmentGoal} | ${userProfile.timeHorizon}

üí∞ OBJETIVO: MAXIMIZAR DIVIDENDOS MENSAIS SUSTENT√ÅVEIS

üìä FIIs: ${JSON.stringify(eligibleFIIs.slice(0, 80))}

üéØ RETORNE JSON COMPLETO (4 FIIs COM M√ÅXIMO DY SUSTENT√ÅVEL):
{
  "suggestions": [
    {
      "ticker": "CODIGO11",
      "name": "Nome FII",
      "price": 100.0,
      "dividendYield": 8.5,
      "pvp": 1.05,
      "sector": "Setor",
      "recommendedShares": 10,
      "recommendedAmount": 1000.0,
      "percentage": 25.0,
      "score": 9.0,
      "reasoning": "An√°lise FOCADA EM DIVIDENDOS: DY sustent√°vel vs hist√≥rico, crescimento dividendos (CAGR), consist√™ncia distribui√ß√µes, cobertura FFO, receita recorrente, contratos blindados, inquilinos AAA, gest√£o eficiente, setor resiliente, compara√ß√£o CORRETA com Selic 14.75%. FOCO: renda passiva m√°xima. Max 150 palavras.",
      "strengths": ["for√ßa dividendos 1", "for√ßa dividendos 2", "for√ßa dividendos 3"],
      "risks": ["risco dividendos 1", "risco dividendos 2"],
      "targetPrice": 110.0,
      "timeHorizon": "12 meses",
      "moat": "vantagem competitiva para sustentar dividendos",
      "sustainability": "sustentabilidade e crescimento dos dividendos mensais",
      "monthlyIncome": "renda mensal estimada por cota",
      "dividendGrowth": "crescimento hist√≥rico dos dividendos (%)"
    }
  ],
  "portfolioStrategy": {
    "overallApproach": "estrat√©gia focada em m√°xima renda mensal sustent√°vel",
    "diversification": "diversifica√ß√£o para estabilizar dividendos mensais",
    "expectedReturn": "retorno esperado com foco em dividendos",
    "riskManagement": "gest√£o de risco para proteger fluxo de dividendos",
    "monthlyIncomeTarget": "meta de renda mensal total da carteira"
  }
}`,
      },
    ];

    const response = await this.makeRequest(messages, 0.05, systemPrompt); // Temperatura ultra baixa para precis√£o

    // üîß Limpeza robusta do JSON
    let cleanResponse = response.trim();

    // Remover markdown se presente
    if (cleanResponse.startsWith("```json")) {
      cleanResponse = cleanResponse
        .replace(/```json\s*/, "")
        .replace(/```\s*$/, "");
    }
    if (cleanResponse.startsWith("```")) {
      cleanResponse = cleanResponse
        .replace(/```\s*/, "")
        .replace(/```\s*$/, "");
    }

    // Encontrar o JSON v√°lido
    const jsonStart = cleanResponse.indexOf("{");
    const jsonEnd = cleanResponse.lastIndexOf("}") + 1;
    
    if (jsonStart !== -1 && jsonEnd > jsonStart) {
      cleanResponse = cleanResponse.substring(jsonStart, jsonEnd);
    }

    // Log para debug
    console.log("üîç Response original:", response);
    console.log("üîç Response limpo:", cleanResponse);

    try {
      const parsed = JSON.parse(cleanResponse);
      console.log("‚úÖ JSON parseado com sucesso:", parsed);
      return parsed;
    } catch (error) {
      console.error("‚ùå Erro ao fazer parse do JSON:", error);
      console.error("üìÑ Response original:", response);
      console.error("üßπ Response limpo:", cleanResponse);
      
      // Tentar uma limpeza mais agressiva
      try {
        // Remover poss√≠veis caracteres invis√≠veis
        const ultraClean = cleanResponse
          .replace(/[\u0000-\u001F\u007F-\u009F]/g, "") // Remove caracteres de controle
          .replace(/^\s+|\s+$/g, "") // Remove espa√ßos no in√≠cio e fim
          .trim();
        
        console.log("üîß Tentando parse ultra-limpo:", ultraClean);
        const ultraParsed = JSON.parse(ultraClean);
        console.log("‚úÖ JSON ultra-limpo parseado com sucesso:", ultraParsed);
        return ultraParsed;
      } catch (ultraError) {
        console.error("‚ùå Falha no parse ultra-limpo tamb√©m:", ultraError);
        throw new Error(`Resposta da IA n√£o est√° em formato JSON v√°lido. Erro: ${error.message}`);
      }
    }
  }

  // üéØ An√°lise de mercado
  async generateMarketAnalysis(userProfile) {
    const systemPrompt = `Analista SUPREMO mercado FIIs brasileiro.

CONTEXTO 2025: Selic 14.75%, IPCA 4.5%, PIB +2.1%
SETORES: Log√≠stica (e-commerce), Corporativo (h√≠brido), Shopping (omnichannel), Receb√≠veis (spread)

RETORNE JSON SIMPLES.`;

    const messages = [
      {
        role: "user",
        content: `Analise mercado FIIs para perfil ${userProfile.riskProfile} | ${userProfile.investmentGoal}

JSON:
{
  "marketSentiment": "POSITIVO|NEUTRO|NEGATIVO",
  "outlook": "an√°lise cen√°rio atual em uma frase",
  "keyTrends": ["trend1", "trend2", "trend3", "trend4"],
  "sectorOutlook": {
    "Log√≠stica": "perspectiva setor",
    "Corporativo": "perspectiva setor",
    "Shoppings": "perspectiva setor",
    "Receb√≠veis": "perspectiva setor"
  },
  "opportunities": ["opp1", "opp2", "opp3"],
  "risks": ["risk1", "risk2", "risk3"]
}`,
      },
    ];

    const response = await this.makeRequest(messages, 0.2, systemPrompt);
    let cleanResponse = response.trim();

    if (cleanResponse.startsWith("```json")) {
      cleanResponse = cleanResponse
        .replace(/```json\s*/, "")
        .replace(/```\s*$/, "");
    }
    if (cleanResponse.startsWith("```")) {
      cleanResponse = cleanResponse
        .replace(/```\s*/, "")
        .replace(/```\s*$/, "");
    }

    return JSON.parse(cleanResponse);
  }
}

// üéØ Provider do contexto da IA
export const AIProvider = ({ children }) => {
  const { user } = useAuth();
  const [claudeManager] = useState(() => new ClaudeManager());
  const [isConfigured, setIsConfigured] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  // ‚úÖ Estado para armazenar BRAPI token
  const [brapiToken, setBrapiToken] = useState(null);

  // üîß Carregar configura√ß√µes do Supabase
  useEffect(() => {
    if (user) {
      loadUserSettings();
    }
  }, [user]);

  const loadUserSettings = async () => {
    try {
      const { data, error } = await supabase
        .from("user_settings")
        .select("claude_api_key, brapi_token")
        .eq("user_id", user.id)
        .single();

      if (error && error.code !== "PGRST116") {
        throw error;
      }

      // Configurar Claude se dispon√≠vel
      if (data?.claude_api_key) {
        claudeManager.setApiKey(data.claude_api_key);
        setIsConfigured(true);
      }

      // Carregar BRAPI token
      if (data?.brapi_token) {
        setBrapiToken(data.brapi_token);
        console.log("‚úÖ BRAPI token carregado do Supabase:", data.brapi_token);
      }

    } catch (error) {
      console.error("Erro ao carregar configura√ß√µes:", error);
    }
  };

  // üîß Salvar API key do Claude no Supabase
  const setApiKey = async (key) => {
    try {
      if (!user) {
        throw new Error("Usu√°rio n√£o autenticado");
      }

      const { error } = await supabase.from("user_settings").upsert(
        {
          user_id: user.id,
          claude_api_key: key,
          updated_at: new Date().toISOString(),
        },
        {
          onConflict: "user_id",
        }
      );

      if (error) throw error;

      claudeManager.setApiKey(key);
      setIsConfigured(!!key);
      
      console.log("‚úÖ API key do Claude salva no Supabase");
    } catch (error) {
      console.error("‚ùå Erro ao salvar API key do Claude:", error);
      throw error;
    }
  };

  // üóëÔ∏è Remover API key do Claude
  const removeApiKey = async () => {
    try {
      if (!user) {
        throw new Error("Usu√°rio n√£o autenticado");
      }

      const { error } = await supabase.from("user_settings").upsert(
        {
          user_id: user.id,
          claude_api_key: null,
          updated_at: new Date().toISOString(),
        },
        {
          onConflict: "user_id",
        }
      );

      if (error) throw error;

      claudeManager.setApiKey(null);
      setIsConfigured(false);
      
      console.log("‚úÖ API key do Claude removida");
    } catch (error) {
      console.error("‚ùå Erro ao remover API key do Claude:", error);
      throw error;
    }
  };

  // üéØ Fun√ß√µes principais da IA
  const generateInvestmentSuggestions = async (
    eligibleFIIs,
    userProfile,
    currentPortfolio = []
  ) => {
    setLoading(true);
    setError(null);
    try {
      const result = await claudeManager.generateInvestmentSuggestions(
        eligibleFIIs,
        userProfile,
        currentPortfolio
      );
      return result;
    } catch (error) {
      setError(error.message);
      throw error;
    } finally {
      setLoading(false);
    }
  };

  const analyzeFII = async (fiiData, userProfile) => {
    setLoading(true);
    setError(null);
    try {
      const result = await claudeManager.analyzeFII(fiiData, userProfile);
      return result;
    } catch (error) {
      setError(error.message);
      throw error;
    } finally {
      setLoading(false);
    }
  };

  const analyzePortfolio = async (portfolio, userProfile) => {
    setLoading(true);
    setError(null);
    try {
      const result = await claudeManager.analyzePortfolio(
        portfolio,
        userProfile
      );
      return result;
    } catch (error) {
      setError(error.message);
      throw error;
    } finally {
      setLoading(false);
    }
  };

  const generateMarketAnalysis = async (userProfile) => {
    setLoading(true);
    setError(null);
    try {
      const result = await claudeManager.generateMarketAnalysis(userProfile);
      return result;
    } catch (error) {
      setError(error.message);
      throw error;
    } finally {
      setLoading(false);
    }
  };

  const clearError = () => {
    setError(null);
  };

  // üîç Fun√ß√£o de teste para debuggar dados BRAPI
  const testBRAPIDataDebug = async (tickers = ["MXRF11", "CPTS11", "RBRF11"]) => {
    if (!brapiToken) {
      console.error("‚ùå Token BRAPI n√£o configurado!");
      return;
    }
    
    console.log("üîç Iniciando teste de dados BRAPI...");
    await testBRAPIData(brapiToken, tickers);
  };

  // üîç Fun√ß√£o de debug espec√≠fica para DY
  const debugDYData = async () => {
    if (!brapiToken) {
      console.error("‚ùå Token BRAPI n√£o configurado!");
      return;
    }
    
    console.log("üîç Iniciando debug de DY...");
    return await debugDY(brapiToken);
  };

  // üîç Fun√ß√£o de teste para diferentes ranges de dividendos na BRAPI
  const testBRAPIRange = async () => {
    console.log("üîç Iniciando teste de ranges BRAPI...");
    return await testBRAPIRangeOptions();
  };

  // üöÄ Fun√ß√£o de teste para o m√©todo h√≠brido inteligente
  const testHybridMethodDebug = async () => {
    console.log("üöÄ Iniciando teste do m√©todo h√≠brido...");
    return await testHybridMethod();
  };

  // Obter BRAPI token do estado
  const getBrapiToken = () => {
    console.log("üîç getBrapiToken chamado, token atual:", brapiToken);
    return brapiToken;
  };

  const getApiKey = () => {
    return claudeManager.getApiKey();
  };

  const value = {
    // Estados
    isConfigured,
    loading,
    error,
    
    // Fun√ß√µes Claude
    setApiKey,
    removeApiKey,
    getApiKey,
    
    // Fun√ß√µes BRAPI
    getBrapiToken,
    
    // Fun√ß√µes de an√°lise
    generateInvestmentSuggestions,
    analyzeFII,
    analyzePortfolio,
    generateMarketAnalysis,
    
    // Utilit√°rios
    clearError,
    testBRAPIDataDebug,
    debugDYData,
    testBRAPIRange,
    testHybridMethodDebug,
  };

  return <AIContext.Provider value={value}>{children}</AIContext.Provider>;
};

export const useAI = () => {
  const context = useContext(AIContext);
  if (context === undefined) {
    throw new Error("useAI must be used within an AIProvider");
  }
  return context;
};
